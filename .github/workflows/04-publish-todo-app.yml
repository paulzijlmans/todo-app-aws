# This workflow deploys the Todo-App into the staging environment.
name: 04 - Publish Todo-App

on:
  push:
    paths:
      - 'application/**'
      - 'cdk/**/*Service*'
      - 'cdk/pom.xml'
  workflow_dispatch:
jobs:
  build-and-publish:
    runs-on: ubuntu-20.04
    name: Build and publish Todo App
    env:
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
    steps:

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Gradle cache
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11.0

      - name: Build application
        run: |
          cd application
          ./gradlew build --stacktrace

      - name: Zip build reports
        if: always()
        run: zip -r reports.zip **/build/reports

      - name: Upload build reports
        uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: reports
          path: reports.zip

      - name: Create Docker image tag
        id: dockerImageTag
        run: echo "::set-output name=tag::$(date +'%Y%m%d%H%M%S')-${GITHUB_SHA}"

      - name: Publish Docker image to ECR registry
        if: github.ref == 'refs/heads/main'
        env:
          DOCKER_IMAGE_TAG: ${{ steps.dockerImageTag.outputs.tag }}
        run: |
          cd application
          docker build -t todo-app .
          docker tag todo-app ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/todo-app:${DOCKER_IMAGE_TAG}
          docker tag todo-app ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/todo-app:latest
          aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com
          docker push ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/todo-app:${DOCKER_IMAGE_TAG}
          docker push ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/todo-app:latest

      - name: Sending deployment event to queue
        if: github.ref == 'refs/heads/main'
        env:
          DOCKER_IMAGE_TAG: ${{ steps.dockerImageTag.outputs.tag }}
        run: |
          export EVENT_PAYLOAD="{\"commitSha\": \"$GITHUB_SHA\", \"ref\": \"main\", \"owner\": \"stratospheric-dev\", \"repo\": \"stratospheric\", \"workflowId\": \"05-update-todo-app-in-staging.yml\", \"dockerImageTag\": \"$DOCKER_IMAGE_TAG\"}"
          aws sqs send-message \
            --queue-url=https://sqs.eu-central-1.amazonaws.com/221875718260/todo-app-deploymentsQueue.fifo \
            --message-group-id default \
            --message-deduplication-id $GITHUB_SHA \
            --message-body "$EVENT_PAYLOAD"